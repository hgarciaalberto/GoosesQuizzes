apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: "scabbard.gradle"


def secretsPropertiesFile = rootProject.file("secrets.properties")
def secretsProperties = new Properties()
secretsProperties.load(new FileInputStream(secretsPropertiesFile))

android {

    compileSdkVersion project.compileSdkVersion
    buildToolsVersion = '29.0.2'

    sourceSets {
        androidTest {
            java.srcDirs += "src/sharedTest/java"
        }
        test {
            java.srcDirs += "src/sharedTest/java"
        }
    }

    defaultConfig {
        applicationId "com.reablace.masterquiz"
        minSdkVersion project.minSdkVersion
        targetSdkVersion project.targetSdkVersion
        multiDexEnabled true
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'

        // Default variables

//        buildConfigField ("String", "MAP_API_KEY", secretsProperties['MAP_API_KEY'])
        resValue "string", "mapApiKey", secretsProperties['MAP_API_KEY']

    }

    signingConfigs {
        debug {
            storeFile file('C:\\Android\\.android\\debug.keystore')
            storePassword 'android'
            keyAlias = 'androiddebugkey'
            keyPassword 'android'
        }

        //TODO: create credential and update "secrets.properties" file
        release {
            storeFile file(secretsProperties['storeFile'])
            storePassword secretsProperties['storePassword']
            keyAlias secretsProperties['keyAlias']
            keyPassword secretsProperties['keyPassword']
        }
    }

    buildTypes {

        debug {
            buildConfigField "String", "FIRESTORE_FLAVOR", '"test"'
            signingConfig signingConfigs.debug
        }

        release {
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            minifyEnabled false
            signingConfig signingConfigs.release

            // Custom configuration
            buildConfigField "String", "FIRESTORE_FLAVOR", '"production"'
        }
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
        unitTests.includeAndroidResources = true
        unitTests.returnDefaultValues = true
    }

    dataBinding {
        enabled = true
    }
}


scabbard {
    enabled true
//    failOnError false
    fullBindingGraphValidation true
}

dependencies {
    // Android
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.google.android.material:material:1.2.0-alpha03'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "androidx.multidex:multidex:$multidexVersion"
    implementation "androidx.appcompat:appcompat:$androidxVersion"
    implementation "androidx.core:core-ktx:$androidxVersion"
    implementation "androidx.annotation:annotation:$androidxVersion"
    implementation "androidx.viewpager2:viewpager2:1.0.0"
    implementation "androidx.constraintlayout:constraintlayout:$androidxConstraintLayoutVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$androidxLifecycleVersion"
    implementation "androidx.navigation:navigation-fragment:$androidxNavigationVersion"
    implementation "androidx.navigation:navigation-ui:$androidxNavigationVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$androidxNavigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$androidxNavigationVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"

    // Test
    testImplementation "androidx.arch.core:core-testing:2.1.0"

    // Core library
    androidTestImplementation 'androidx.test:core:1.2.0'
//    androidTestImplementation "org.mockito:mockito-core:$mockitoVersion"
//    androidTestImplementation "org.mockito:mockito-inline:$mockitoVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.mockito:mockito-inline:$mockitoVersion"

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestUtil 'androidx.test:orchestrator:1.2.0'

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesAndroidVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesAndroidVersion"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.1.1'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesAndroidVersion"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesAndroidVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"

    // Assertions
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation "androidx.test.ext:junit-ktx:1.1.1"
    androidTestImplementation "androidx.test:core-ktx:1.2.0"

    // Espresso dependencies and Tests
//    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
//    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
//    androidTestImplementation "androidx.test.espresso:espresso-accessibility:$espressoVersion"
//    androidTestImplementation "androidx.test.espresso:espresso-web:$espressoVersion"
//    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$espressoVersion"

    // The following Espresso dependency can be either "implementation"
    // or "androidTestImplementation", depending on whether you want the
    // dependency to appear on your APK's compile classpath or the test APK
    // classpath.
//    androidTestImplementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"


    // Dagger
    api "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kaptTest "com.google.dagger:dagger-compiler:$daggerVersion"
    api "com.google.dagger:dagger-android:$daggerVersion"
    api "com.google.dagger:dagger-android-support:$daggerVersion"
    // if you use the support libraries
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

    // Firebase
    implementation "com.google.firebase:firebase-analytics:$firebaseAnalyticsVersion"
    implementation "com.google.firebase:firebase-auth:$firebaseAuthVersion"
    implementation "com.google.firebase:firebase-firestore-ktx:$firebaseFirestoreVersion"
//    implementation "com.google.firebase:firebase-firestore:$firebaseFirestoreVersion"
    implementation "com.firebaseui:firebase-ui-firestore:$firebaseFirestoreUiVersion"
    implementation "com.google.firebase:firebase-firestore-ktx:$firebaseFirestoreVersion"
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
}
